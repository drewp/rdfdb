# Stubs for twisted.internet (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class IDelayedCall:
    def getTime(self) -> Any: ...
    def cancel(self) -> None: ...
    def delay(self, secondsLater: Any) -> None: ...
    def reset(self, secondsFromNow: Any) -> None: ...
    def active(self) -> None: ...


class IAddress:  # this is https://twistedmatrix.com/documents/current/api/twisted.internet.address.IPv4Address.html
    type: str
    host: str
    port: int   
    
class IListeningPort:
    def startListening(self): ...
    def stopListening(self): ... # returns deferred
    def getHost(self) -> IAddress: ...
    _realPortNumber: int # from t.i.tcp.Port
    
class ReactorType: # abridged
    def listenTCP(self, port: Any, factory: Any, backlog: int = ..., interface: str = ...) -> IListeningPort: ...
    def seconds(self) -> None: ...
    def callLater(self, delay: Any, callable: Any, *args: Any, **kw: Any) -> IDelayedCall: ...
    def getDelayedCalls(self) -> None: ...
    def callFromThread(self, callable: Any, *args: Any, **kw: Any) -> None: ...
    def callInThread(self, callable: Any, *args: Any, **kwargs: Any) -> None: ...
    running: Any = ...
    def resolve(self, name: Any, timeout: int = ...) -> None: ...
    def run(self) -> None: ...
    def stop(self) -> None: ...
    def crash(self) -> None: ...
    def iterate(self, delay: int = ...) -> None: ...
    def fireSystemEvent(self, eventType: Any) -> None: ...
    def addSystemEventTrigger(self, phase: Any, eventType: Any, callable: Any, *args: Any, **kw: Any) -> None: ...
    def removeSystemEventTrigger(self, triggerID: Any) -> None: ...
    def callWhenRunning(self, callable: Any, *args: Any, **kw: Any) -> None: ...
    

reactor = ReactorType()
