# Stubs for twisted.internet (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from .interfaces import IDelayedCall, IAddress, IListeningPort
import twisted.internet.protocol

class ReactorType: # abridged
    def listenTCP(self, port: int, factory: twisted.internet.protocol.ServerFactory, backlog: Optional[int] =50, interface: str = ...) -> IListeningPort: ...
    def connectTCP(self, host :bytes, port: int, factory: twisted.internet.protocol.ClientFactory, timeout: Optional[float] = 30): ...
    def seconds(self) -> None: ...
    def callLater(self, delay: Any, callable: Any, *args: Any, **kw: Any) -> IDelayedCall: ...
    def getDelayedCalls(self) -> None: ...
    def callFromThread(self, callable: Any, *args: Any, **kw: Any) -> None: ...
    def callInThread(self, callable: Any, *args: Any, **kwargs: Any) -> None: ...
    running: Any = ...
    def resolve(self, name: Any, timeout: int = ...) -> None: ...
    def run(self) -> None: ...
    def stop(self) -> None: ...
    def crash(self) -> None: ...
    def iterate(self, delay: int = ...) -> None: ...
    def fireSystemEvent(self, eventType: Any) -> None: ...
    def addSystemEventTrigger(self, phase: Any, eventType: Any, callable: Any, *args: Any, **kw: Any) -> None: ...
    def removeSystemEventTrigger(self, triggerID: Any) -> None: ...
    def callWhenRunning(self, callable: Any, *args: Any, **kw: Any) -> None: ...
    

reactor = ReactorType()

