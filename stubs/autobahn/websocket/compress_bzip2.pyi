# Stubs for autobahn.websocket.compress_bzip2 (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from autobahn.websocket.compress_base import PerMessageCompress, PerMessageCompressOffer, PerMessageCompressOfferAccept, PerMessageCompressResponse, PerMessageCompressResponseAccept
from typing import Any, Optional

class PerMessageBzip2Mixin:
    EXTENSION_NAME: str = ...
    COMPRESS_LEVEL_PERMISSIBLE_VALUES: Any = ...

class PerMessageBzip2Offer(PerMessageCompressOffer, PerMessageBzip2Mixin):
    @classmethod
    def parse(cls, params: Any): ...
    accept_max_compress_level: Any = ...
    request_max_compress_level: Any = ...
    def __init__(self, accept_max_compress_level: bool = ..., request_max_compress_level: int = ...) -> None: ...
    def get_extension_string(self): ...
    def __json__(self): ...

class PerMessageBzip2OfferAccept(PerMessageCompressOfferAccept, PerMessageBzip2Mixin):
    offer: Any = ...
    request_max_compress_level: Any = ...
    compress_level: Any = ...
    def __init__(self, offer: Any, request_max_compress_level: int = ..., compress_level: Optional[Any] = ...) -> None: ...
    def get_extension_string(self): ...
    def __json__(self): ...

class PerMessageBzip2Response(PerMessageCompressResponse, PerMessageBzip2Mixin):
    @classmethod
    def parse(cls, params: Any): ...
    client_max_compress_level: Any = ...
    server_max_compress_level: Any = ...
    def __init__(self, client_max_compress_level: Any, server_max_compress_level: Any) -> None: ...
    def __json__(self): ...

class PerMessageBzip2ResponseAccept(PerMessageCompressResponseAccept, PerMessageBzip2Mixin):
    response: Any = ...
    compress_level: Any = ...
    def __init__(self, response: Any, compress_level: Optional[Any] = ...) -> None: ...
    def __json__(self): ...

class PerMessageBzip2(PerMessageCompress, PerMessageBzip2Mixin):
    DEFAULT_COMPRESS_LEVEL: int = ...
    @classmethod
    def create_from_response_accept(cls, is_server: Any, accept: Any): ...
    @classmethod
    def create_from_offer_accept(cls, is_server: Any, accept: Any): ...
    server_max_compress_level: Any = ...
    client_max_compress_level: Any = ...
    def __init__(self, is_server: Any, server_max_compress_level: Any, client_max_compress_level: Any) -> None: ...
    def __json__(self): ...
    def start_compress_message(self) -> None: ...
    def compress_message_data(self, data: Any): ...
    def end_compress_message(self): ...
    def start_decompress_message(self) -> None: ...
    def decompress_message_data(self, data: Any): ...
    def end_decompress_message(self) -> None: ...
