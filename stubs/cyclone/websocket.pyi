# Stubs for cyclone.websocket (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import cyclone.escape
import cyclone.web
from typing import Any

class _NotEnoughFrame(Exception): ...

class WebSocketHandler(cyclone.web.RequestHandler):
    application: Any = ...
    request: Any = ...
    transport: Any = ...
    ws_protocol: Any = ...
    def __init__(self, application: Any, request: Any, **kwargs: Any) -> None: ...
    def headersReceived(self) -> None: ...
    def connectionMade(self, *args: Any, **kwargs: Any) -> None: ...
    def connectionLost(self, reason: Any) -> None: ...
    def messageReceived(self, message: Any) -> None: ...
    def sendMessage(self, message: Any) -> None: ...
    def forbidConnection(self, message: Any): ...

class WebSocketProtocol:
    handler: Any = ...
    request: Any = ...
    transport: Any = ...
    def __init__(self, handler: Any) -> None: ...
    def acceptConnection(self) -> None: ...
    def rawDataReceived(self, data: Any) -> None: ...
    def sendMessage(self, message: Any) -> None: ...

class WebSocketProtocol17(WebSocketProtocol):
    def __init__(self, handler: Any) -> None: ...
    def acceptConnection(self) -> None: ...
    def rawDataReceived(self, data: Any) -> None: ...
    def sendMessage(self, message: Any, code: int = ...) -> None: ...

class WebSocketProtocol76(WebSocketProtocol):
    def __init__(self, handler: Any) -> None: ...
    def acceptConnection(self) -> None: ...
    def rawDataReceived(self, data: Any) -> None: ...
    def close(self) -> None: ...
    def sendMessage(self, message: Any) -> None: ...

class FrameDecodeError(Exception): ...

class Hixie76FrameDecoder:
    CLOSING_FRAME: Any = ...
    WAIT_FOR_FRAME_TYPE: int = ...
    INSIDE_FRAME: int = ...
    WAIT_FOR_CLOSE: int = ...
    def __init__(self) -> None: ...
    def feed(self, data: Any): ...
